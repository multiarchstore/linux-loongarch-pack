
name: Build Debian loong64 kernel

permissions: write-all

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  debian:
    name: Build loong64 iso
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 4096
          swap-size-mb: 512
          remove-dotnet: 'true'
          remove-android: 'true'

      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Get linux kernel source and config
        run: |
          bash ./get-source.sh
              
      - name: Set up loong64 Debian container
        uses: addnab/docker-run-action@v3
        with:
          image: docker.io/library/debian:sid
          options: --privileged -v ${{ github.workspace }}:/work
          shell: bash
          run: |
            cd /work
            export DEBIAN_FRONTEND=noninteractive
            export KCONFIG_CONFIG="/work/config"
            apt update
            apt install sudo zstd python3 gawk qemu-user qemu-user-binfmt debian-ports-archive-keyring devscripts equivs git xz-utils fakeroot wget curl build-essential bc kmod cpio flex libncurses5-dev libelf-dev libssl-dev python3 dwarves bison debhelper rsync -y
            git config --global --add safe.directory /work

            # Prepare binfmt
            mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc
            curl -fsSL -o /usr/local/bin/systemctl-docker https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/refs/heads/master/files/docker/systemctl3.py
            chmod +x /usr/local/bin/systemctl-docker
            /usr/local/bin/systemctl-docker start systemd-binfmt.service

            # loong64
            echo "deb [trusted=yes arch=loong64] http://deb.debian.org/debian-ports sid main contrib non-free non-free-firmware" | sudo tee -a  /etc/apt/sources.list.d/debian-sid-loong64.list
            dpkg --add-architecture loong64
            apt update
            apt install -y gcc-loongarch64-linux-gnu libc6:loong64 libssl-dev:loong64 python3:loong64 libelf-dev:loong64

            # Applying patches
            pushd linux
            for patch_file in /work/patch/*
            do
                patch -p1 < "$patch_file"
            done
            popd

            # Prepare env
            pushd linux
            export lv=$(make -s kernelversion)
            export xv="-for-debian"
            export rv=0
            export git=$(git rev-parse --short=7 HEAD)
            export dv=$(git show -s --date=format:'%Y%m%d' --format=%cd)
            export jobs=$((2*$(nproc))); echo $jobs
            pvcmd="cat $KCONFIG_CONFIG | grep 'LOCALVERSION='" && export pv=$(eval $pvcmd | cut -d'"' -f2)

            # Build deb
            ARCH=loongarch CROSS_COMPILE=loongarch64-linux-gnu- scripts/config --file $KCONFIG_CONFIG --refresh
            make -j$jobs ARCH=loongarch CROSS_COMPILE=loongarch64-linux-gnu- KDEB_PKGVERSION="$lv$pv$xv-$rv~$dv.g$git" bindeb-pkg 2>&1 | tee ../build-$lv$pv$xv-$rv~$dv.g"$git"_amd64.log && xz -e9 ../build-*$pv*
            popd

            # Prepare artifact
            mkdir -p assets/ && mv ./*$pv* assets/

      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: loong64 kernel for Debian
          path: assets/*
          compression-level: 0
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`