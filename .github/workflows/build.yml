name: Build Debian loong64 kernel

permissions: write-all

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  debian:
    name: Build loong64 iso
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 4096
          swap-size-mb: 512
          remove-dotnet: 'true'
          remove-android: 'true'

      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up loong64 Debian container
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/loong64/debian:trixie
          options: --cpus=4 --platform linux/loong64 --privileged -v ${{ github.workspace }}:/work
          shell: bash
          run: |
            cd /work
            export DEBIAN_FRONTEND=noninteractive
            export KCONFIG_CONFIG="/work/aosc-os-abbs/runtime-kernel/linux-kernel/autobuild/loongarch64/config"
            apt update; apt install sudo git xz-utils fakeroot wget curl build-essential bc kmod cpio flex libncurses5-dev libelf-dev libssl-dev dwarves bison -y
            git config --global --add safe.directory /work
            git config --global --add safe.directory /work/aosc-os-abbs
            git config --global --add safe.directory /work/linux

            # Prepare env
            pushd linux
            export lv=$(make -s kernelversion)
            export xv="-aosc-main"
            export rv=0
            export git=$(git rev-parse --short=7 HEAD)
            export dv=$(git show -s --date=format:'%Y%m%d' --format=%cd)
            export jobs=$((2*$(nproc))); echo $jobs
            pvcmd="cat $KCONFIG_CONFIG | grep 'LOCALVERSION='" && export pv=$(eval $pvcmd | cut -d'"' -f2)

            # Build deb
            scripts/config --file $KCONFIG_CONFIG --refresh
            make -j$jobs KDEB_PKGVERSION='$lv$pv$xv-$rv~$dv.g$git' bindeb-pkg 2>&1 | tee ../build-$lv$pv$xv-$rv~$dv.g"$git"_amd64.log && xz -e9 ../build-*$pv*
            popd

            # Prepare artifact
            mkdir -p assets/ && mv ./*$pv* assets/

      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: loong64 kernel for Debian
          path: assets/*
          compression-level: 0
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`